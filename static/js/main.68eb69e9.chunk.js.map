{"version":3,"sources":["components/Config/ErrorList.js","components/Homepage.js","components/Footer.js","components/Error.js","components/Config/ChartColor.js","components/Config/ParentChart.js","components/Graphs/PieGraph.js","components/Graphs/BarGraph.js","components/UserData.js","components/ResultsPage.js","App.js","index.js"],"names":["apiErrorList","403","404","errorList","withRouter","props","history","useHistory","useState","data","error","userData","setUserData","useEffect","push","login","className","onSubmit","e","preventDefault","usernameElement","document","getElementById","value","trim","classList","add","setTimeout","remove","handleEmptyUsername","usernameFieldValue","responseObject","fetch","then","response","json","status","catch","retrieveBasicUserData","icon","Octoface","verticalAlign","size","id","type","autoComplete","onChange","Homepage","Error","backgroundColor","ParentChart","options","PieGraph","languageData","totalRepos","loading","languageCount","languageName","backgroundColorData","i","key","ratio","toFixed","ctx","getContext","chartConfiguration","datasets","labels","legend","position","align","Chart","BarGraph","starredData","console","log","graphLabel","graphData","graphColor","minBarLength","display","UserData","avatar_url","src","alt","name","href","html_url","rel","target","created_at","Date","toLocaleDateString","month","day","year","public_repos","toLocaleString","followers","following","setLanguageData","setStarredData","getUserRepositories","url","publicRepoCount","a","languageDataMap","Map","starredDataMap","reposRemaining","currentPageNumber","errorOccured","length","language","starredCount","stargazers_count","repoName","has","currentCount","get","set","undefined","sortedLanguageData","entries","sort","b","sortedStarredData","username","URLSearchParams","window","location","search","repoUrl","repos_url","totalPublicRepos","Fragment","App","exact","path","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.68eb69e9.chunk.js","sourcesContent":["export const apiErrorList = {\n  403: \"Not allowed to access request resource\",\n  404: \"User was not found in database\",\n};\n\nexport const errorList = {\n  USERNAME_EMPTY_ERROR: \"Username entered is not valid\",\n  GENERAL_ERROR: \"Something went wrong. Check back later\",\n};\n","import React, { useState, useEffect } from \"react\";\nimport \"./Homepage.css\";\nimport Octicon, { Octoface } from \"@primer/octicons-react\";\nimport { withRouter, useHistory } from \"react-router-dom\";\nimport { apiErrorList, errorList } from \"./Config/ErrorList\";\nconst pagePathOnValidUsername = \"/user?username=\";\nconst usernameHint = \"Try 'Google'\";\n\nfunction Homepage(props) {\n  const history = useHistory();\n  const [userData, setUserData] = useState({\n    data: null,\n    error: null,\n  });\n\n  //If data available then route page appropriately\n  useEffect(() => {\n    if (userData.data != null) {\n      props.setUserData(userData);\n      history.push(pagePathOnValidUsername + userData.data.login);\n    }\n  });\n\n  const retrieveBasicUserData = (usernameFieldValue) => {\n    let responseObject = {\n      data: null,\n      error: null,\n    };\n\n    fetch(`https://api.github.com/users/${usernameFieldValue}`)\n      .then((response) => {\n        return response.json().then((data) => {\n          if (response.status === 200) {\n            responseObject.data = data;\n          }\n          // 404 and 403 errors\n          else if (response.status in apiErrorList) {\n            responseObject.error = apiErrorList[response.status];\n          }\n          // default error if response not ok and not in error list\n          else {\n            responseObject.error = errorList.GENERAL_ERROR;\n          }\n          setUserData(responseObject);\n        });\n      })\n      .catch(() => {\n        responseObject.error = errorList.GENERAL_ERROR;\n        setUserData(responseObject);\n      });\n  };\n\n  // Function deals with handling of empty username response\n  const handleEmptyUsername = (usernameElement) => {\n    // Reset input value, animate and set error\n    usernameElement.value = \"\";\n    usernameElement.classList.add(\"shakeAnimation\");\n    setUserData({\n      data: null,\n      error: errorList.USERNAME_EMPTY_ERROR,\n    });\n    setTimeout(function () {\n      usernameElement.classList.remove(\"shakeAnimation\");\n    }, 300);\n  };\n\n  // this function is called when form is submitted-------------------------------------------\n  const formSubmitted = (e) => {\n    e.preventDefault();\n    let usernameElement = document.getElementById(\"usernameInput\");\n    // condition to either call api or set erro\n    if (usernameElement.value === null || usernameElement.value.trim() === \"\") {\n      handleEmptyUsername(usernameElement);\n    } else {\n      retrieveBasicUserData(usernameElement.value.trim());\n    }\n  };\n\n  return (\n    <div className=\"mainHomepageContainer\">\n      <form onSubmit={formSubmitted}>\n        <Octicon icon={Octoface} verticalAlign=\"middle\" size=\"large\" />\n        <label>Enter GitHub Username:</label>\n        <input\n          id=\"usernameInput\"\n          type=\"text\"\n          autoComplete=\"off\"\n          onChange={() => setUserData({ data: null, error: null })}\n        />\n        {userData.error !== null && (\n          <p className=\"errorMessage\">{userData.error}</p>\n        )}\n        {userData.error == null && <p className=\"hintText\">{usernameHint}</p>}\n      </form>\n    </div>\n  );\n}\n\nexport default withRouter(Homepage);\n","import React from \"react\";\nimport \"./Footer.css\";\n\nfunction Homepage() {\n  return (\n    <div className=\"Footer\">\n      <p>\n        Created by{\" \"}\n        <a\n          target=\"_blank\"\n          href=\"https://vishalkohli.com\"\n          rel=\"noopener noreferrer\"\n        >\n          Vishal Kohli\n        </a>{\" \"}\n        with{\" \"}\n        <a target=\"_blank\" href=\"https://reactjs.org\" rel=\"noopener noreferrer\">\n          React\n        </a>{\" \"}\n        and{\" \"}\n        <a\n          target=\"_blank\"\n          href=\"https://www.chartjs.org\"\n          rel=\"noopener noreferrer\"\n        >\n          Chart.js\n        </a>\n        .\n      </p>\n    </div>\n  );\n}\n\nexport default Homepage;\n","import React from \"react\";\nimport \"./Error.css\";\nimport Octicon, { Octoface } from \"@primer/octicons-react\";\n\nfunction Error({ error }) {\n  return (\n    <div className=\"mainErrorContainer\">\n      <div>\n        <Octicon icon={Octoface} verticalAlign=\"middle\" size=\"large\" />\n        <p>{error}</p>\n        <p className=\"RedirectMessage\">\n          Redirecting you to homepage in 3 seconds.{\" \"}\n        </p>\n\n        {/* {props.error.exists && props.error.value === 404 && (\n          <p>Oops! User with username: {props.username} was not found.</p>\n        )}\n        {props.error.exists && props.error.value !== 404 && (\n          <p>Something went wrong.</p>\n        )} */}\n      </div>\n    </div>\n  );\n}\n\nexport default Error;\n","// export const backgroundColorList = [\n//   \"#fe4127\",\n//   \"#9070f9\",\n//   \"#c466b6\",\n//   \"#460989\",\n//   \"#99a9b6\",\n//   \"#0b7e39\",\n//   \"#1aedc9\",\n//   \"#957d15\",\n//   \"#ed9d0e\",\n//   \"#de6d24\",\n// ];\n\nexport const backgroundColor = [\n  \"rgba(255, 99, 132, 0.8)\",\n  \"rgba(54, 162, 235, 0.8)\",\n  \"rgba(255, 206, 86, 0.8)\",\n  \"rgba(75, 192, 192, 0.8)\",\n  \"rgba(153, 102, 255, 0.8)\",\n  \"rgba(255, 159, 64, 0.8)\",\n];\nexport const borderColor = [\n  \"rgba(255, 99, 132, 1)\",\n  \"rgba(54, 162, 235, 1)\",\n  \"rgba(255, 206, 86, 1)\",\n  \"rgba(75, 192, 192, 1)\",\n  \"rgba(153, 102, 255, 1)\",\n  \"rgba(255, 159, 64, 1)\",\n];\n","import React from \"react\";\nimport \"./ParentChart.css\";\n\nconst ParentChart = ({\n\n  type,\n  data,\n  options,\n}) => {\n  const chart = {\n    type: type,\n    data: data,\n    options: options,\n  };\n\n  return chart;\n};\n\nexport default ParentChart;\n","import React, { useState, useEffect } from \"react\";\nimport Chart from \"chart.js\";\nimport \"./PieGraph.css\";\nimport \"./General.css\";\nimport {\n  backgroundColor,\n} from \"../Config/ChartColor\";\nimport ParentChart from \"../Config/ParentChart\";\n\nfunction PieGraph({ languageData, totalRepos }) {\n  useEffect(() => {\n    if (!languageData.loading && languageData.data !== null) {\n      let languageCount = [],\n        languageName = [],\n        backgroundColorData = [];\n\n      let i = 0;\n\n      for (let [key, value] of languageData.data) {\n        // calculate how much the language was used \n\n        let ratio = (value / totalRepos * 100).toFixed(1);\n\n        languageName.push(key + \" \" + ratio + \"%\");\n        languageCount.push(value);\n        backgroundColorData.push(backgroundColor[i]);\n        i++;\n        if (i >= 5) {\n          break;\n        }\n      }\n\n      const ctx = document.getElementById(\"pieChart\").getContext(\"2d\");\n\n      let chartConfiguration = {\n        type: \"doughnut\",\n        data: {\n          datasets: [\n            {\n              data: languageCount,\n              backgroundColor: backgroundColorData,\n            },\n          ],\n          labels: languageName,\n        },\n        // Configuration options go here\n        options: {\n          legend: {\n            position: \"right\",\n            align: \"start\",\n          },\n        },\n      };\n\n      var chart = new Chart(ctx, ParentChart(chartConfiguration));\n    }\n  });\n  return (\n\n    <div className=\"pieChartContainer\">\n      <header>5 Most Used Languages</header>\n\n      {languageData.loading &&\n        <div className=\"loader\"></div>\n      }\n      {!languageData.loading && languageData.data !== null &&\n        <canvas id=\"pieChart\"></canvas>\n      }\n      {!languageData.loading && languageData.data === null &&\n        <p className=\"noData\">No data available</p>\n      }\n\n    </div>\n  );\n}\n\nexport default PieGraph;\n","import React, { useState, useEffect } from \"react\";\nimport Chart from \"chart.js\";\nimport \"./BarGraph.css\";\nimport \"./General.css\";\nimport { backgroundColor, borderColor } from \"../Config/ChartColor\";\nimport ParentChart from \"../Config/ParentChart\";\n\nfunction BarGraph({ starredData }) {\n  useEffect(() => {\n    console.log(starredData)\n    if (!starredData.loading && starredData.data !== null) {\n      const ctx = document.getElementById(\"barChart\").getContext(\"2d\");\n\n      let graphLabel = []\n      let graphData = []\n      let graphColor = []\n\n      let i = 0;\n      for (let [key, value] of starredData.data) {\n\n        // calculate how much the language was used \n        graphLabel.push(key);\n        graphData.push(value);\n        graphColor.push(backgroundColor[i]);\n        i++;\n        if (i >= 5) {\n          break;\n        }\n      }\n      let configuration = {\n        type: \"bar\",\n        data: {\n          labels: graphLabel,\n          datasets: [\n            {\n              data: graphData,\n              backgroundColor: graphColor,\n              minBarLength: 2\n            },\n          ],\n        },\n        options: {\n          legend: {\n            display: false\n          },\n        }\n      }\n\n      let chartConfiguration = ParentChart(configuration)\n      var chart = new Chart(ctx, chartConfiguration);\n\n    }\n  });\n  // let chartConfiguration = {\n  //   type: \"bar\",\n  //   data: {\n  //     labels: [\"Red\", \"Blue\", \"Yellow\", \"Green\", \"Purple\", \"Orange\"],\n  //     datasets: [\n  //       {\n  //         // label: \"# of Votes\",\n  //         data: [12, 19, 4, 3, 5, 200000],\n  //         backgroundColor: [\n  //           \"rgba(255, 99, 132, 0.2)\",\n  //           \"rgba(54, 162, 235, 0.2)\",\n  //           \"rgba(255, 206, 86, 0.2)\",\n  //           \"rgba(75, 192, 192, 0.2)\",\n  //           \"rgba(153, 102, 255, 0.2)\",\n  //           \"rgba(255, 159, 64, 0.2)\",\n  //         ],\n  //         borderColor: [\n  //           \"rgba(255, 99, 132, 1)\",\n  //           \"rgba(54, 162, 235, 1)\",\n  //           \"rgba(255, 206, 86, 1)\",\n  //           \"rgba(75, 192, 192, 1)\",\n  //           \"rgba(153, 102, 255, 1)\",\n  //           \"rgba(255, 159, 64, 1)\",\n  //         ],\n  //         minBarLength: 2\n  //       },\n  //     ],\n  //   },\n  //   options: {\n  //     legend: {\n  //       display: false\n  //     },\n  //   }\n\n  return (\n\n    <div className=\"barChartContainer\">\n      <header>5 Most Starred Repos</header>\n\n      {starredData.loading &&\n        <div className=\"loader\"></div>\n      }\n      {!starredData.loading && starredData.data !== null &&\n        <canvas id=\"barChart\"></canvas>\n      }\n      {!starredData.loading && starredData.data === null &&\n        <p className=\"noData\">No data available</p>\n      }\n    </div>\n  );\n}\n\nexport default BarGraph;\n","import React, { useState, useEffect } from \"react\";\nimport \"./UserData.css\";\n\nfunction UserData({ userData }) {\n  return (\n    <div className=\"mainUserDataContainer\">\n      {/* Picture */}\n      {userData.avatar_url && (\n        <div className=\"userPicture\">\n          <img src={userData.avatar_url} alt=\"avatar\" />\n        </div>\n      )}\n\n      {/* Profile name */}\n      {userData.name && <h1>{userData.name}</h1>}\n\n      {/* Login */}\n      {userData.login && (\n        <h2>\n          <a href={userData.html_url} rel=\"noopener noreferrer\" target=\"_blank\">\n            {userData.login}\n          </a>\n        </h2>\n      )}\n\n      {/* JoiningDate */}\n      {userData.created_at && (\n        <p>\n          Joined{\" \"}\n          {new Date(userData.created_at).toLocaleDateString(\"en-US\", {\n            month: \"long\",\n            day: \"numeric\",\n            year: \"numeric\",\n          })}\n        </p>\n      )}\n\n      {/* Repository, follower and following */}\n      <div className=\"userStatistics\">\n        <div className=\"statBox\">\n          <span className=\"statBoxNum\">\n            {userData.public_repos.toLocaleString()}\n          </span>\n          <span className=\"statBoxLabel\">Repositories</span>\n        </div>\n        <div className=\"statBox\">\n          <span className=\"statBoxNum\">\n            {userData.followers.toLocaleString()}\n          </span>\n          <span className=\"statBoxLabel\">Followers</span>\n        </div>\n\n        <div className=\"statBox\">\n          <span className=\"statBoxNum\">\n            {userData.following.toLocaleString()}\n          </span>\n          <span className=\"statBoxLabel\">Following</span>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default UserData;\n","import React, { useState, useEffect } from \"react\";\nimport \"./ResultsPage.css\";\nimport Error from \"../components/Error\";\nimport PieGraph from \"./Graphs/PieGraph\";\nimport { apiErrorList, errorList } from \"./Config/ErrorList\";\n// import UserData from \"./UserData\";\nimport { useHistory } from \"react-router-dom\";\nimport BarGraph from \"./Graphs/BarGraph\";\nimport UserData from \"./UserData\";\n\n// 1. Check if the incoming props and username data has value.\n// 2. Make API call if user data is null and username is not empty.\n// 3. Display userdata if both username and data is avaialble\n// 4. Else display error page\n\nfunction Homepage(props) {\n  const history = useHistory();\n  const [languageData, setLanguageData] = useState({\n    data: null,\n    loading: false\n  });\n  const [starredData, setStarredData] = useState({\n    data: null,\n    loading: false\n  });\n  const [userData, setUserData] = useState({\n    data: null,\n    error: null,\n  });\n\n\n  useEffect(() => {\n    if (userData.error) {\n      setTimeout(function () {\n        history.push(\"/\");\n      }, 3000);\n    }\n  });\n\n  // Loop over all the repos and calculate how often a language is used.\n  const getUserRepositories = async (url, publicRepoCount) => {\n    // These are used to store repo data\n    let languageDataMap = new Map();\n    let starredDataMap = new Map();\n\n    let reposRemaining = publicRepoCount;\n    let currentPageNumber = 1;\n    let errorOccured = false;\n    // Loop over until all public repo data is fetched or error occurs\n    while (reposRemaining > 0 && !errorOccured) {\n\n      setLanguageData({ data: null, loading: true });\n      setStarredData({ data: null, loading: true });\n\n      try {\n\n        let response = await fetch(url + `?page=${currentPageNumber}&per_page=100`);\n        if (response.status !== 200) {\n          setUserData({ data: null, error: errorList.GENERAL_ERROR })\n          errorOccured = true;\n        }\n        else {\n          let data = await response.json();\n\n          for (let i = 0; i < data.length; i++) {\n            let language = data[i].language;\n            let starredCount = data[i].stargazers_count;\n            let repoName = data[i].name;\n\n            // Language cannot be null / empty\n            if (language && language.trim() !== \"\") {\n              if (languageDataMap.has(language)) {\n                let currentCount = languageDataMap.get(language);\n                languageDataMap.set(language, currentCount + 1);\n              } else {\n                languageDataMap.set(language, 1);\n              }\n            }\n            // get starred data\n            if (starredCount !== null && starredCount !== undefined &&\n              repoName != null && repoName !== undefined) {\n\n              starredDataMap.set(repoName, starredCount);\n            }\n          }\n          // Reduce number of repos\n          reposRemaining = reposRemaining - data.length;\n          currentPageNumber++;\n        }\n      }\n      catch (err) {\n        setUserData({ data: null, error: errorList.GENERAL_ERROR })\n        errorOccured = true\n      }\n    }\n\n    // sort all the repos\n    const sortedLanguageData = new Map(\n      [...languageDataMap.entries()].sort((a, b) => b[1] - a[1])\n    );\n\n    const sortedStarredData = new Map(\n      [...starredDataMap.entries()].sort((a, b) => b[1] - a[1])\n    );\n\n    setLanguageData({ data: sortedLanguageData, loading: false });\n    setStarredData({ data: sortedStarredData, loading: false });\n  }\n\n\n\n  // This method will retrieve both basic user data and repo data--\n  const retrieveBasicUserData = (usernameFieldValue) => {\n    let responseObject = {\n      data: null,\n      error: null,\n    };\n\n    fetch(`https://api.github.com/users/${usernameFieldValue}`)\n      .then((response) => {\n        return response.json().then((data) => {\n          if (response.status === 200) {\n            responseObject.data = data;\n          }\n          // 404 and 403 errors\n          else if (response.status in apiErrorList) {\n            responseObject.error = apiErrorList[response.status];\n          }\n          // default error if response not ok and not in error list\n          else {\n            responseObject.error = errorList.GENERAL_ERROR;\n          }\n\n          setUserData(responseObject);\n          if (responseObject.data !== null) {\n            getUserRepositories(\n              responseObject.data.repos_url,\n              responseObject.data.public_repos\n            );\n          }\n        });\n      })\n\n      .catch(() => {\n        responseObject.error = apiErrorList[0];\n        setUserData(responseObject);\n      });\n  };\n\n  useEffect(() => {\n    //get username from query param\n    const urlParams = new URLSearchParams(window.location.search);\n    const username = urlParams.get(\"username\");\n\n    // Set incoming data using setUserData and call API to retrieve repolist\n    if (props.userData && username && username.trim() !== \"\") {\n      setUserData(props.userData);\n\n      // get Repo data\n      let repoUrl = props.userData.data.repos_url;\n      let totalPublicRepos = props.userData.data.public_repos\n      if (repoUrl != null && repoUrl.trim() !== \"\") {\n        getUserRepositories(repoUrl, totalPublicRepos);\n      }\n    } else if (\n      props.userData === null &&\n      username !== null &&\n      username.trim() !== \"\"\n    ) {\n      retrieveBasicUserData(username);\n    } else {\n      setUserData({ data: null, error: errorList.GENERAL_ERROR });\n    }\n  }, []);\n\n  return (\n    <div className=\"MainResultPageContainer\">\n      {userData.error && <Error error={userData.error} />}\n\n      {userData.data && (\n        <React.Fragment>\n          <UserData userData={userData.data} />\n        </React.Fragment>\n      )}\n      {userData.data &&\n        <div className=\"chartContainer\">\n          <PieGraph languageData={languageData} totalRepos={userData.data.public_repos} />\n          <BarGraph starredData={starredData} />\n        </div>\n      }\n\n    </div>\n  );\n}\n\nexport default Homepage;\n","import React, { useState } from \"react\";\nimport \"./App.css\";\nimport Homepage from \"./components/Homepage\";\nimport Footer from \"./components/Footer\";\nimport ResultPage from \"./components/ResultsPage\";\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\nimport BarGraph from \"./components/Graphs/BarGraph\"\n\nfunction App() {\n  const [userData, setUserData] = useState(null);\n\n  return (\n    <div className=\"App\">\n      <Router>\n        <Switch>\n          <Route exact path=\"/\">\n            <Homepage setUserData={setUserData} />\n          </Route>\n          <Route exact path=\"/user\">\n            <ResultPage userData={userData} />\n          </Route>\n        </Switch>\n      </Router>\n\n      {/* <Footer /> */}\n    </div>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}