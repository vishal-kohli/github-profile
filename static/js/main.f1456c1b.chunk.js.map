{"version":3,"sources":["components/Config/ErrorList.js","components/Homepage.js","components/Error.js","components/Config/ChartColor.js","components/Config/ParentChart.js","components/Graphs/PieGraph.js","components/UserData.js","components/Graphs/BarGraph.js","components/ResultsPage.js","components/Footer.js","App.js","index.js"],"names":["apiErrorList","403","404","errorList","Homepage","props","useState","data","error","userData","setUserData","useEffect","className","onSubmit","e","preventDefault","usernameElement","document","getElementById","value","trim","classList","add","setTimeout","remove","handleEmptyUsername","usernameFieldValue","responseObject","fetch","then","response","json","status","catch","retrieveBasicUserData","icon","Octoface","verticalAlign","size","id","type","autoComplete","onChange","Error","backgroundColor","ParentChart","options","PieGraph","languageData","totalRepos","b","languageCount","languageName","backgroundColorData","i","key","ratio","toFixed","push","ctx","getContext","chartConfiguration","datasets","labels","legend","position","align","Chart","loading","UserData","avatar_url","src","alt","name","login","href","html_url","rel","target","created_at","Date","toLocaleDateString","month","day","year","public_repos","toLocaleString","followers","following","BarGraph","starredData","graphLabel","graphData","graphColor","minBarLength","display","ResultsPage","history","useHistory","setLanguageData","setStarredData","getUserRepositories","url","publicRepoCount","a","languageDataMap","Map","starredDataMap","reposRemaining","currentPageNumber","errorOccured","length","language","starredCount","stargazers_count","repoName","has","currentCount","get","set","undefined","sortedLanguageData","entries","sort","sortedStarredData","useCallback","repos_url","parsed","queryString","parse","window","location","hash","username","repoUrl","totalPublicRepos","Fragment","App","exact","path","to","pathname","search","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.f1456c1b.chunk.js","sourcesContent":["export const apiErrorList = {\n  403: \"Not allowed to access request resource\",\n  404: \"User was not found in database\",\n};\n\nexport const errorList = {\n  USERNAME_EMPTY_ERROR: \"Username entered is not valid\",\n  GENERAL_ERROR: \"Something went wrong. Check back later\",\n};\n","import React, { useState, useEffect } from \"react\";\nimport \"./Homepage.css\";\nimport Octicon, { Octoface } from \"@primer/octicons-react\";\nimport { apiErrorList, errorList } from \"./Config/ErrorList\";\nconst usernameHint = \"Try 'Google'\";\n\nfunction Homepage(props) {\n  // const history = useHistory();\n  const [userData, setUserData] = useState({\n    data: null,\n    error: null,\n  });\n\n  //If data available then route page appropriately\n  useEffect(() => {\n    if (userData.data != null) {\n      props.setUserData(userData);\n    }\n  });\n\n  const retrieveBasicUserData = (usernameFieldValue) => {\n    let responseObject = {\n      data: null,\n      error: null,\n    };\n\n    fetch(`https://api.github.com/users/${usernameFieldValue}`)\n      .then((response) => {\n        return response.json().then((data) => {\n          if (response.status === 200) {\n            responseObject.data = data;\n          }\n          // 404 and 403 errors\n          else if (response.status in apiErrorList) {\n            responseObject.error = apiErrorList[response.status];\n          }\n          // default error if response not ok and not in error list\n          else {\n            responseObject.error = errorList.GENERAL_ERROR;\n          }\n          setUserData(responseObject);\n        });\n      })\n      .catch(() => {\n        responseObject.error = errorList.GENERAL_ERROR;\n        setUserData(responseObject);\n      });\n  };\n\n  // Function deals with handling of empty username response\n  const handleEmptyUsername = (usernameElement) => {\n    // Reset input value, animate and set error\n    usernameElement.value = \"\";\n    usernameElement.classList.add(\"shakeAnimation\");\n    setUserData({\n      data: null,\n      error: errorList.USERNAME_EMPTY_ERROR,\n    });\n    setTimeout(function () {\n      usernameElement.classList.remove(\"shakeAnimation\");\n    }, 300);\n  };\n\n  //   // this function is called when form is submitted-------------------------------------------\n  const formSubmitted = (e) => {\n    e.preventDefault();\n    let usernameElement = document.getElementById(\"usernameInput\");\n    // condition to either call api or set erro\n    if (usernameElement.value === null || usernameElement.value.trim() === \"\") {\n      handleEmptyUsername(usernameElement);\n    } else {\n      retrieveBasicUserData(usernameElement.value.trim());\n    }\n  };\n\n  return (\n    <div className=\"mainHomepageContainer\">\n      <form onSubmit={formSubmitted}>\n        <Octicon icon={Octoface} verticalAlign=\"middle\" size=\"large\" />\n        <label>Enter GitHub Username:</label>\n        <input\n          id=\"usernameInput\"\n          type=\"text\"\n          autoComplete=\"off\"\n          onChange={() => setUserData({ data: null, error: null })}\n        />\n        {userData.error !== null && (\n          <p className=\"errorMessage\">{userData.error}</p>\n        )}\n        {userData.error == null && <p className=\"hintText\">{usernameHint}</p>}\n      </form>\n\n    </div>\n  );\n}\nexport default Homepage\n","import React from \"react\";\nimport \"./Error.css\";\nimport Octicon, { Octoface } from \"@primer/octicons-react\";\n\nfunction Error({ error }) {\n  return (\n    <div className=\"mainErrorContainer\">\n      <div>\n        <Octicon icon={Octoface} verticalAlign=\"middle\" size=\"large\" />\n        <p>{error}</p>\n        <p className=\"RedirectMessage\">\n          Redirecting you to homepage in 3 seconds.{\" \"}\n        </p>\n\n        {/* {props.error.exists && props.error.value === 404 && (\n          <p>Oops! User with username: {props.username} was not found.</p>\n        )}\n        {props.error.exists && props.error.value !== 404 && (\n          <p>Something went wrong.</p>\n        )} */}\n      </div>\n    </div>\n  );\n}\n\nexport default Error;\n","// export const backgroundColorList = [\n//   \"#fe4127\",\n//   \"#9070f9\",\n//   \"#c466b6\",\n//   \"#460989\",\n//   \"#99a9b6\",\n//   \"#0b7e39\",\n//   \"#1aedc9\",\n//   \"#957d15\",\n//   \"#ed9d0e\",\n//   \"#de6d24\",\n// ];\n\nexport const backgroundColor = [\n  \"rgba(255, 99, 132, 0.8)\",\n  \"rgba(54, 162, 235, 0.8)\",\n  \"rgba(255, 206, 86, 0.8)\",\n  \"rgba(75, 192, 192, 0.8)\",\n  \"rgba(153, 102, 255, 0.8)\",\n  \"rgba(255, 159, 64, 0.8)\",\n];\nexport const borderColor = [\n  \"rgba(255, 99, 132, 1)\",\n  \"rgba(54, 162, 235, 1)\",\n  \"rgba(255, 206, 86, 1)\",\n  \"rgba(75, 192, 192, 1)\",\n  \"rgba(153, 102, 255, 1)\",\n  \"rgba(255, 159, 64, 1)\",\n];\n","import \"./ParentChart.css\";\n\nconst ParentChart = ({\n\n  type,\n  data,\n  options,\n}) => {\n  const chart = {\n    type: type,\n    data: data,\n    options: options,\n  };\n\n  return chart;\n};\n\nexport default ParentChart;\n","import React, { useEffect } from \"react\";\nimport Chart from \"chart.js\";\nimport \"./PieGraph.css\";\nimport \"./General.css\";\nimport { backgroundColor } from \"../Config/ChartColor\";\nimport ParentChart from \"../Config/ParentChart\";\n\nfunction PieGraph({ languageData, totalRepos }) {\n  useEffect(() => {\n    if (!languageData.b && languageData.data !== null) {\n      let languageCount = [],\n        languageName = [],\n        backgroundColorData = [];\n\n      let i = 0;\n\n      for (let [key, value] of languageData.data) {\n        // calculate how much the language was used \n\n        let ratio = (value / totalRepos * 100).toFixed(1);\n\n        languageName.push(key + \" \" + ratio + \"%\");\n        languageCount.push(value);\n        backgroundColorData.push(backgroundColor[i]);\n        i++;\n        if (i >= 5) {\n          break;\n        }\n      }\n\n      const ctx = document.getElementById(\"pieChart\").getContext(\"2d\");\n\n      let chartConfiguration = {\n        type: \"doughnut\",\n        data: {\n          datasets: [\n            {\n              data: languageCount,\n              backgroundColor: backgroundColorData,\n            },\n          ],\n          labels: languageName,\n        },\n        // Configuration options go here\n        options: {\n          legend: {\n            position: \"right\",\n            align: \"start\",\n          },\n        },\n      };\n\n      var chart = new Chart(ctx, ParentChart(chartConfiguration));\n    }\n  });\n  return (\n    <div className=\"pieChartContainer\">\n      <header>Top 5 Languages</header>\n\n      {languageData.loading &&\n        <div className=\"loader\"></div>\n      }\n      {!languageData.loading && languageData.data !== null &&\n        <canvas id=\"pieChart\"></canvas>\n      }\n      {!languageData.loading && languageData.data === null &&\n        <p className=\"noData\">No data available</p>\n      }\n\n    </div>\n  );\n}\n\nexport default PieGraph;\n","import React from \"react\";\nimport \"./UserData.css\";\n\nfunction UserData({ userData }) {\n  return (\n    <div className=\"mainUserDataContainer\">\n      {/* Picture */}\n      {userData.avatar_url && (\n        <div className=\"userPicture\">\n          <img src={userData.avatar_url} alt=\"avatar\" />\n        </div>\n      )}\n\n      {/* Profile name */}\n      {userData.name && <h1>{userData.name}</h1>}\n\n      {/* Login */}\n      {userData.login && (\n        <h2>\n          <a href={userData.html_url} rel=\"noopener noreferrer\" target=\"_blank\">\n            @{userData.login}\n          </a>\n        </h2>\n      )}\n\n      {/* JoiningDate */}\n      {userData.created_at && (\n        <p>\n          Joined{\" \"}\n          {new Date(userData.created_at).toLocaleDateString(\"en-US\", {\n            month: \"long\",\n            day: \"numeric\",\n            year: \"numeric\",\n          })}\n        </p>\n      )}\n\n      {/* Repository, follower and following */}\n      <div className=\"userStatistics\">\n        <div className=\"statBox\">\n          <span className=\"statBoxNum\">\n            {userData.public_repos.toLocaleString()}\n          </span>\n          <span className=\"statBoxLabel\">Repositories</span>\n        </div>\n        <div className=\"statBox\">\n          <span className=\"statBoxNum\">\n            {userData.followers.toLocaleString()}\n          </span>\n          <span className=\"statBoxLabel\">Followers</span>\n        </div>\n\n        <div className=\"statBox\">\n          <span className=\"statBoxNum\">\n            {userData.following.toLocaleString()}\n          </span>\n          <span className=\"statBoxLabel\">Following</span>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default UserData;\n","import React, { useEffect } from \"react\";\nimport Chart from \"chart.js\";\nimport \"./BarGraph.css\";\nimport \"./General.css\";\nimport { backgroundColor } from \"../Config/ChartColor\";\nimport ParentChart from \"../Config/ParentChart\";\n\nfunction BarGraph({ starredData }) {\n  useEffect(() => {\n    if (!starredData.loading && starredData.data !== null) {\n      const ctx = document.getElementById(\"barChart\").getContext(\"2d\");\n\n      let graphLabel = []\n      let graphData = []\n      let graphColor = []\n\n      let i = 0;\n      for (let [key, value] of starredData.data) {\n\n        // calculate how much the language was used \n        graphLabel.push(key);\n        graphData.push(value);\n        graphColor.push(backgroundColor[i]);\n        i++;\n        if (i >= 5) {\n          break;\n        }\n      }\n      let configuration = {\n        type: \"bar\",\n        data: {\n          labels: graphLabel,\n          datasets: [\n            {\n              data: graphData,\n              backgroundColor: graphColor,\n              minBarLength: 2\n            },\n          ],\n        },\n        options: {\n          legend: {\n            display: false\n          },\n        }\n      }\n\n      let chartConfiguration = ParentChart(configuration)\n      var chart = new Chart(ctx, chartConfiguration);\n\n    }\n  });\n  // let chartConfiguration = {\n  //   type: \"bar\",\n  //   data: {\n  //     labels: [\"Red\", \"Blue\", \"Yellow\", \"Green\", \"Purple\", \"Orange\"],\n  //     datasets: [\n  //       {\n  //         // label: \"# of Votes\",\n  //         data: [12, 19, 4, 3, 5, 200000],\n  //         backgroundColor: [\n  //           \"rgba(255, 99, 132, 0.2)\",\n  //           \"rgba(54, 162, 235, 0.2)\",\n  //           \"rgba(255, 206, 86, 0.2)\",\n  //           \"rgba(75, 192, 192, 0.2)\",\n  //           \"rgba(153, 102, 255, 0.2)\",\n  //           \"rgba(255, 159, 64, 0.2)\",\n  //         ],\n  //         borderColor: [\n  //           \"rgba(255, 99, 132, 1)\",\n  //           \"rgba(54, 162, 235, 1)\",\n  //           \"rgba(255, 206, 86, 1)\",\n  //           \"rgba(75, 192, 192, 1)\",\n  //           \"rgba(153, 102, 255, 1)\",\n  //           \"rgba(255, 159, 64, 1)\",\n  //         ],\n  //         minBarLength: 2\n  //       },\n  //     ],\n  //   },\n  //   options: {\n  //     legend: {\n  //       display: false\n  //     },\n  //   }\n\n  return (\n\n    <div className=\"barChartContainer\">\n      <header>Top 5 Starred Repos</header>\n\n      {starredData.loading &&\n        <div className=\"loader\"></div>\n      }\n      {!starredData.loading && starredData.data !== null &&\n        <canvas id=\"barChart\"></canvas>\n      }\n      {!starredData.loading && starredData.data === null &&\n        <p className=\"noData\">No data available</p>\n      }\n    </div>\n  );\n}\n\nexport default BarGraph;\n","import React, { useState, useEffect, useCallback } from \"react\";\nimport \"./ResultsPage.css\";\nimport Error from \"../components/Error\";\nimport PieGraph from \"./Graphs/PieGraph\";\nimport { apiErrorList, errorList } from \"./Config/ErrorList\";\nimport UserData from \"./UserData\";\nimport { useHistory } from \"react-router-dom\";\nimport BarGraph from \"./Graphs/BarGraph\";\nimport queryString from 'query-string';\n\n// 1. Check if the incoming props and query param username has value.\n// 2. Make API call if user data is null and username is not empty.\n// 3. Display userdata if both username and data is avaialble\n// 4. Else display error page\n\nfunction ResultsPage(props) {\n  const history = useHistory();\n  const [languageData, setLanguageData] = useState({\n    data: null,\n    loading: false\n  });\n  const [starredData, setStarredData] = useState({\n    data: null,\n    loading: false\n  });\n  const [userData, setUserData] = useState({\n    data: null,\n    error: null,\n  });\n\n  useEffect(() => {\n    if (userData.error) {\n      setTimeout(function () {\n        history.push(\"/\");\n      }, 3000);\n    }\n  });\n\n  // Loop over all the repos and calculate how often a language is used.\n  const getUserRepositories = async (url, publicRepoCount) => {\n    // These are used to store repo data\n    let languageDataMap = new Map();\n    let starredDataMap = new Map();\n\n    let reposRemaining = publicRepoCount;\n    let currentPageNumber = 1;\n    let errorOccured = false;\n    // Loop over until all public repo data is fetched or error occurs\n    while (reposRemaining > 0 && !errorOccured) {\n\n      setLanguageData({ data: null, loading: true });\n      setStarredData({ data: null, loading: true });\n\n      try {\n\n        let response = await fetch(url + `?page=${currentPageNumber}&per_page=100`);\n        if (response.status !== 200) {\n          setUserData({ data: null, error: errorList.GENERAL_ERROR })\n          errorOccured = true;\n        }\n        else {\n          let data = await response.json();\n\n          for (let i = 0; i < data.length; i++) {\n            let language = data[i].language;\n            let starredCount = data[i].stargazers_count;\n            let repoName = data[i].name;\n\n            // Language cannot be null / empty\n            if (language && language.trim() !== \"\") {\n              if (languageDataMap.has(language)) {\n                let currentCount = languageDataMap.get(language);\n                languageDataMap.set(language, currentCount + 1);\n              } else {\n                languageDataMap.set(language, 1);\n              }\n            }\n            // get starred data\n            if (starredCount !== null && starredCount !== undefined &&\n              repoName != null && repoName !== undefined) {\n\n              starredDataMap.set(repoName, starredCount);\n            }\n          }\n          // Reduce number of repos\n          reposRemaining = reposRemaining - data.length;\n          currentPageNumber++;\n        }\n      }\n      catch (err) {\n        setUserData({ data: null, error: errorList.GENERAL_ERROR })\n        errorOccured = true\n      }\n    }\n\n    // sort all the repos\n    const sortedLanguageData = new Map(\n      [...languageDataMap.entries()].sort((a, b) => b[1] - a[1])\n    );\n\n    const sortedStarredData = new Map(\n      [...starredDataMap.entries()].sort((a, b) => b[1] - a[1])\n    );\n\n    setLanguageData({ data: sortedLanguageData, loading: false });\n    setStarredData({ data: sortedStarredData, loading: false });\n  }\n\n\n  // This method will retrieve both basic user data and repo data--\n  const retrieveBasicUserData = useCallback((usernameFieldValue) => {\n    let responseObject = {\n      data: null,\n      error: null,\n    };\n\n    fetch(`https://api.github.com/users/${usernameFieldValue}`)\n      .then((response) => {\n        return response.json().then((data) => {\n          if (response.status === 200) {\n            responseObject.data = data;\n          }\n          // 404 and 403 errors\n          else if (response.status in apiErrorList) {\n            responseObject.error = apiErrorList[response.status];\n          }\n          // default error if response not ok and not in error list\n          else {\n            responseObject.error = errorList.GENERAL_ERROR;\n          }\n\n          setUserData(responseObject);\n          if (responseObject.data !== null) {\n            getUserRepositories(\n              responseObject.data.repos_url,\n              responseObject.data.public_repos\n            );\n          }\n        });\n      })\n\n      .catch(() => {\n        responseObject.error = apiErrorList[0];\n        setUserData(responseObject);\n      });\n  }, []);\n\n  useEffect(() => {\n    const parsed = queryString.parse(window.location.hash);\n    let username = null;\n\n    if (\"/user?username\" in parsed) {\n      username = parsed[\"/user?username\"];\n    }\n\n    // Set incoming data using setUserData and call API to retrieve repolist\n    if (props.userData && username && username.trim() !== \"\") {\n      setUserData(props.userData);\n\n      // get Repo data\n      let repoUrl = props.userData.data.repos_url;\n      let totalPublicRepos = props.userData.data.public_repos\n      if (repoUrl != null && repoUrl.trim() !== \"\") {\n        getUserRepositories(repoUrl, totalPublicRepos);\n      }\n    } else if (\n      props.userData === null &&\n      username !== null &&\n      username.trim() !== \"\"\n    ) {\n      retrieveBasicUserData(username);\n    } else {\n      setUserData({ data: null, error: errorList.GENERAL_ERROR });\n    }\n  }, [props.userData, retrieveBasicUserData]);\n\n  return (\n    <div className=\"MainResultPageContainer\">\n      {userData.error && <Error error={userData.error} />}\n\n      {userData.data && (\n        <React.Fragment>\n          <UserData userData={userData.data} />\n        </React.Fragment>\n      )}\n      {userData.data &&\n        <div className=\"chartContainer\">\n          <PieGraph languageData={languageData} totalRepos={userData.data.public_repos} />\n          <BarGraph starredData={starredData} />\n        </div>\n      }\n    </div>\n  );\n}\n\nexport default ResultsPage;\n","import React from \"react\";\nimport \"./Footer.css\";\n\nfunction Homepage() {\n  return (\n    <div className=\"Footer\">\n      <p>\n        Created by{\" \"}\n        <a\n          target=\"_blank\"\n          href=\"https://vishalkohli.com\"\n          rel=\"noopener noreferrer\"\n        >\n          Vishal Kohli\n        </a>\n      </p>\n      <p className=\"subHeadingFooter\">Used <a target=\"_blank\" href=\"https://reactjs.org\" rel=\"noopener noreferrer\">\n        React\n        </a>{\" \"}\n        and{\" \"}\n        <a\n          target=\"_blank\"\n          href=\"https://www.chartjs.org\"\n          rel=\"noopener noreferrer\"\n        >\n          Chart.js\n        </a>\n      </p>\n    </div>\n  );\n}\n\nexport default Homepage;\n","import React, { useState } from \"react\";\nimport \"./App.css\";\nimport Homepage from \"./components/Homepage\";\nimport ResultsPage from \"./components/ResultsPage\";\nimport Footer from \"./components/Footer\"\nimport { HashRouter, Switch, Route } from \"react-router-dom\";\nimport { Redirect } from \"react-router-dom\";\n\nfunction App() {\n  const [userData, setUserData] = useState(null);\n\n\n  return (\n    <div className=\"App\">\n      <HashRouter>\n        <Switch>\n          <Route exact path=\"/\">\n            {userData ?\n              <Redirect\n                to={{\n                  pathname: \"/user\",\n                  search: `username=${userData.data.login}`\n                }}\n              />\n              :\n              <Homepage setUserData={setUserData} />}\n          </Route>\n          <Route path=\"/user\">\n            <ResultsPage userData={userData} />\n          </Route>\n        </Switch>\n      </HashRouter>\n      {/* <Footer /> */}\n    </div>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}