{"version":3,"sources":["components/Homepage.js","App.js","index.js"],"names":["Homepage","props","useState","data","error","userData","className","onSubmit","e","preventDefault","icon","Octoface","verticalAlign","size","id","type","autoComplete","App","setUserData","exact","path","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"2SAiGeA,MAzFf,SAAkBC,GAAO,MAESC,mBAAS,CACvCC,KAAM,KACNC,MAAO,OAJc,mBAEhBC,EAFgB,KAsEvB,OAtEuB,KAuErB,yBAAKC,UAAU,yBACb,0BAAMC,SAbY,SAACC,GACrBA,EAAEC,mBAaE,kBAAC,IAAD,CAASC,KAAMC,IAAUC,cAAc,SAASC,KAAK,UACrD,yDACA,2BACEC,GAAG,gBACHC,KAAK,OACLC,aAAa,QAGK,OAAnBX,EAASD,OACR,uBAAGE,UAAU,gBAAgBD,EAASD,OAErB,MAAlBC,EAASD,OAAiB,uBAAGE,UAAU,YAtF3B,mB,eCoBNW,MApBf,WAAgB,IAAD,EACmBf,mBAAS,MAD5B,mBACIgB,GADJ,WAGb,OACE,yBAAKZ,UAAU,OACb,kBAAC,IAAD,KACE,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOa,OAAK,EAACC,KAAK,KAChB,kBAAC,EAAD,CAAUF,YAAaA,SCTnCG,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,W","file":"static/js/main.1d92341b.chunk.js","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport \"./Homepage.css\";\nimport Octicon, { Octoface } from \"@primer/octicons-react\";\n// import { withRouter } from \"react-router-dom\";\n// import { apiErrorList, errorList } from \"./Config/ErrorList\";\n// const pagePathOnValidUsername = \"/user?username=\";\nconst usernameHint = \"Try 'Google'\";\n\nfunction Homepage(props) {\n  //   // const history = useHistory();\n  const [userData, setUserData] = useState({\n    data: null,\n    error: null,\n  });\n\n  //   //If data available then route page appropriately\n  //   useEffect(() => {\n  //     if (userData.data != null) {\n  //       props.setUserData(userData);\n  //       // history.push(pagePathOnValidUsername + userData.data.login);\n  //     }\n  //   });\n\n  //   const retrieveBasicUserData = (usernameFieldValue) => {\n  //     let responseObject = {\n  //       data: null,\n  //       error: null,\n  //     };\n\n  //     fetch(`https://api.github.com/users/${usernameFieldValue}`)\n  //       .then((response) => {\n  //         return response.json().then((data) => {\n  //           if (response.status === 200) {\n  //             responseObject.data = data;\n  //           }\n  //           // 404 and 403 errors\n  //           else if (response.status in apiErrorList) {\n  //             responseObject.error = apiErrorList[response.status];\n  //           }\n  //           // default error if response not ok and not in error list\n  //           else {\n  //             responseObject.error = errorList.GENERAL_ERROR;\n  //           }\n  //           setUserData(responseObject);\n  //         });\n  //       })\n  //       .catch(() => {\n  //         responseObject.error = errorList.GENERAL_ERROR;\n  //         setUserData(responseObject);\n  //       });\n  //   };\n\n  //   // Function deals with handling of empty username response\n  //   const handleEmptyUsername = (usernameElement) => {\n  //     // Reset input value, animate and set error\n  //     usernameElement.value = \"\";\n  //     usernameElement.classList.add(\"shakeAnimation\");\n  //     setUserData({\n  //       data: null,\n  //       error: errorList.USERNAME_EMPTY_ERROR,\n  //     });\n  //     setTimeout(function () {\n  //       usernameElement.classList.remove(\"shakeAnimation\");\n  //     }, 300);\n  //   };\n\n  //   // this function is called when form is submitted-------------------------------------------\n  const formSubmitted = (e) => {\n    e.preventDefault();\n    //     let usernameElement = document.getElementById(\"usernameInput\");\n    //     // condition to either call api or set erro\n    //     if (usernameElement.value === null || usernameElement.value.trim() === \"\") {\n    //       handleEmptyUsername(usernameElement);\n    //     } else {\n    //       retrieveBasicUserData(usernameElement.value.trim());\n    //     }\n  };\n\n  return (\n    <div className=\"mainHomepageContainer\">\n      <form onSubmit={formSubmitted}>\n        <Octicon icon={Octoface} verticalAlign=\"middle\" size=\"large\" />\n        <label>Enter GitHub Username:</label>\n        <input\n          id=\"usernameInput\"\n          type=\"text\"\n          autoComplete=\"off\"\n        // onChange={() => setUserData({ data: null, error: null })}\n        />\n        {userData.error !== null && (\n          <p className=\"errorMessage\">{userData.error}</p>\n        )}\n        {userData.error == null && <p className=\"hintText\">{usernameHint}</p>}\n      </form>\n    </div>\n  );\n}\nexport default Homepage\n// export default withRouter(Homepage);\n","import React, { useState } from \"react\";\nimport \"./App.css\";\nimport Homepage from \"./components/Homepage\";\n// import ResultPage from \"./components/ResultsPage\";\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\n\nfunction App() {\n  const [userData, setUserData] = useState(null);\n\n  return (\n    <div className=\"App\">\n      <Router>\n        <Switch>\n          <Route exact path=\"/\">\n            <Homepage setUserData={setUserData} />\n          </Route>\n          {/* <Route exact path=\"/user\">\n            <ResultPage userData={userData} />\n          </Route> */}\n        </Switch>\n      </Router>\n\n    </div>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}